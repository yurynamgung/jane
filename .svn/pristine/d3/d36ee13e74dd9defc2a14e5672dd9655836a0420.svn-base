/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BeeTreeGUI.java
 *
 * Created on Oct 18, 2010, 2:02:11 PM
 */

package beetree;

import java.awt.Color;
import javax.swing.JFileChooser;
import java.io.*;
import java.awt.Cursor;
import java.awt.Component;
import java.awt.Container;
import javax.swing.JOptionPane;

/**
 *
 * @author beametitiri
 */
public class BeeTree extends javax.swing.JFrame {

    /** Creates new form BeeTreeGUI */
    public BeeTree() {
        System.err.println(getClass());
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        treeToolbar = new javax.swing.JToolBar();
        nodeButton = new javax.swing.JButton();
        labelButton = new javax.swing.JButton();
        linkButton = new javax.swing.JButton();
        timeButton = new javax.swing.JButton();
        regionButton = new javax.swing.JButton();
        eraseButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        fileToolbar = new javax.swing.JToolBar();
        saveButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel = new beetree.BeePanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(java.awt.Color.white);
        setLocationByPlatform(true);

        treeToolbar.setFloatable(false);
        treeToolbar.setRollover(true);

        nodeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/child.png"))); // NOI18N
        nodeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nodeButton.setFocusable(false);
        nodeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nodeButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        nodeButton.setMaximumSize(new java.awt.Dimension(33, 33));
        nodeButton.setMinimumSize(new java.awt.Dimension(33, 33));
        nodeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nodeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nodeButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nodeButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nodeButtonMouseEntered(evt);
            }
        });
        treeToolbar.add(nodeButton);

        labelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/name.png"))); // NOI18N
        labelButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        labelButton.setFocusable(false);
        labelButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelButton.setMargin(new java.awt.Insets(1, 1, 1, 1));
        labelButton.setMaximumSize(new java.awt.Dimension(33, 33));
        labelButton.setMinimumSize(new java.awt.Dimension(33, 33));
        labelButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        labelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                labelButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelButtonMouseEntered(evt);
            }
        });
        treeToolbar.add(labelButton);

        linkButton.setBackground(new java.awt.Color(204, 204, 204));
        linkButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/linkNodes.png"))); // NOI18N
        linkButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        linkButton.setFocusable(false);
        linkButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        linkButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        linkButton.setMaximumSize(new java.awt.Dimension(33, 33));
        linkButton.setMinimumSize(new java.awt.Dimension(33, 33));
        linkButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        linkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linkButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                linkButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                linkButtonMouseEntered(evt);
            }
        });
        treeToolbar.add(linkButton);

        timeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/time.png"))); // NOI18N
        timeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        timeButton.setFocusable(false);
        timeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        timeButton.setMargin(new java.awt.Insets(1, 1, 1, 1));
        timeButton.setMaximumSize(new java.awt.Dimension(33, 33));
        timeButton.setMinimumSize(new java.awt.Dimension(33, 33));
        timeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        timeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timeButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                timeButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                timeButtonMouseEntered(evt);
            }
        });
        treeToolbar.add(timeButton);

        regionButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/region.png"))); // NOI18N
        regionButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        regionButton.setFocusable(false);
        regionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        regionButton.setMargin(new java.awt.Insets(1, 1, 1, 1));
        regionButton.setMaximumSize(new java.awt.Dimension(33, 33));
        regionButton.setMinimumSize(new java.awt.Dimension(33, 33));
        regionButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        regionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regionButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                regionButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                regionButtonMouseEntered(evt);
            }
        });
        treeToolbar.add(regionButton);

        eraseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/eraseNode.png"))); // NOI18N
        eraseButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        eraseButton.setFocusable(false);
        eraseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eraseButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        eraseButton.setMaximumSize(new java.awt.Dimension(33, 33));
        eraseButton.setMinimumSize(new java.awt.Dimension(33, 33));
        eraseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eraseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eraseButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                eraseButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                eraseButtonMouseEntered(evt);
            }
        });
        eraseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraseButtonActionPerformed(evt);
            }
        });
        treeToolbar.add(eraseButton);

        clearButton.setBackground(new java.awt.Color(204, 204, 204));
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/clear.png"))); // NOI18N
        clearButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        clearButton.setFocusable(false);
        clearButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        clearButton.setMaximumSize(new java.awt.Dimension(33, 33));
        clearButton.setMinimumSize(new java.awt.Dimension(33, 33));
        clearButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearButtonMouseEntered(evt);
            }
        });
        treeToolbar.add(clearButton);

        fileToolbar.setFloatable(false);
        fileToolbar.setRollover(true);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/save.png"))); // NOI18N
        saveButton.setFocusable(false);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        saveButton.setMaximumSize(new java.awt.Dimension(27, 27));
        saveButton.setMinimumSize(new java.awt.Dimension(27, 27));
        saveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                saveButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                saveButtonMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveButtonMouseEntered(evt);
            }
        });
        fileToolbar.add(saveButton);

        loadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/load.png"))); // NOI18N
        loadButton.setFocusable(false);
        loadButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loadButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        loadButton.setMaximumSize(new java.awt.Dimension(27, 27));
        loadButton.setMinimumSize(new java.awt.Dimension(27, 27));
        loadButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        loadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                loadButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                loadButtonMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loadButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loadButtonMouseEntered(evt);
            }
        });
        fileToolbar.add(loadButton);

        jScrollPane1.setBackground(Color.WHITE);

        panel.setToolTipText("");

        org.jdesktop.layout.GroupLayout panelLayout = new org.jdesktop.layout.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 1144, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 677, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panel);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setLabelFor(panel);
        jLabel1.setText("HOST");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setLabelFor(panel);
        jLabel2.setText("PARASITE");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(fileToolbar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(288, 288, 288)
                        .add(jLabel1)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, treeToolbar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 699, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jLabel2)
                        .add(272, 272, 272))))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(treeToolbar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .add(fileToolbar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Lightens clear button
     */
    public void releaseClear() {
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/clear.png"))); 
    }

    /**
     * Darkens clear button
     */
    public void pressClear() {
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/clearD.png")));
    }

    /**
     * Lightens add node button
     */
    public void releaseNode() {
        nodeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/child.png")));
    }

    /**
     * Darkens add node button
     */
    public void pressNode() {
        nodeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/childD.png")));
    }

    /**
     * Lightens erase button.
     */
    public void releaseErase() {
        eraseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/eraseNode.png")));
    }

    /**
     * Darkens erase button.
     */
    public void pressErase() {
        eraseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/eraseNodeD.png")));
    }

    /**
     * Lightens add link button
     */
    public void releaseLink() {
        linkButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/linkNodes.png")));
    }

    /**
     * Darkens add link button
     */
    public void pressLink() {
        linkButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/linkNodesD.png")));
    }
    
    /**
     * Lightens time button
     */
    public void releaseTime() {
        timeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/time.png")));
    }

    /**
     * Darkens time button
     */
    public void pressTime() {
        timeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/timeD.png")));
    }/**
     * Lightens region button
     */
    
    public void releaseRegion() {
        regionButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/region.png")));
    }

    /**
     * Darkens region button
     */
    public void pressRegion() {
        regionButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/regionD.png")));
    }

    /**
     * Lightens label button
     */
    public void releaseLabel() {
        labelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/name.png")));
    }

    /**
     * Darkens label button
     */
    public void pressLabel() {
        labelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/nameD.png")));
    }

    private void clearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseClicked

        setFrame();
        panel.setState(BeePanel.CLEAR_STATE);
    }//GEN-LAST:event_clearButtonMouseClicked

    private void nodeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nodeButtonMouseClicked

        setFrame();
        panel.setState(BeePanel.NODE_STATE);
    }//GEN-LAST:event_nodeButtonMouseClicked

    private void eraseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eraseButtonMouseClicked

        setFrame();
        panel.setState(BeePanel.ERASE_STATE);
    }//GEN-LAST:event_eraseButtonMouseClicked

    private void linkButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkButtonMouseClicked

        setFrame();
        panel.setState(BeePanel.LINK_STATE);
    }//GEN-LAST:event_linkButtonMouseClicked

    private void labelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelButtonMouseClicked

        setFrame();
        panel.setState(BeePanel.LABEL_STATE);
    }//GEN-LAST:event_labelButtonMouseClicked

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked

        setFrame();
        int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
          // What to do with the file, e.g. display it in a TextArea
                panel.saveTrees(file.getAbsolutePath());
            } catch (IOException ex) {
                System.out.println("problem accessing file"+file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_saveButtonMouseClicked

    private void labelCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_labelCheckBoxStateChanged


    }//GEN-LAST:event_labelCheckBoxStateChanged

    private void loadButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadButtonMouseClicked

        setFrame();
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
          // What to do with the file, e.g. display it in a TextArea
                panel.loadTrees(file);
            } catch (IOException ex) {
                System.out.println("problem accessing file"+file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_loadButtonMouseClicked

    private void saveButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMousePressed
        //saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/beetree/saveD.png")));
    }//GEN-LAST:event_saveButtonMousePressed

    private void saveButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseExited
       this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_saveButtonMouseExited

    private void saveButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseReleased
      //  saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/beetree/save.png")));
    }//GEN-LAST:event_saveButtonMouseReleased

    private void loadButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadButtonMousePressed
      //  loadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/beetree/loadD.png")));
    }//GEN-LAST:event_loadButtonMousePressed

    private void loadButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadButtonMouseExited
       this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_loadButtonMouseExited

    private void loadButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadButtonMouseReleased
       // loadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/beetree/load.png")));
    }//GEN-LAST:event_loadButtonMouseReleased

    private void eraseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eraseButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eraseButtonActionPerformed

    private void clearButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_clearButtonMouseEntered

    private void clearButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseExited
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_clearButtonMouseExited

    private void saveButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_saveButtonMouseEntered

    private void loadButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_loadButtonMouseEntered

    private void nodeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nodeButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_nodeButtonMouseEntered

    private void eraseButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eraseButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_eraseButtonMouseEntered

    private void linkButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_linkButtonMouseEntered

    private void labelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_labelButtonMouseEntered

    private void nodeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nodeButtonMouseExited
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_nodeButtonMouseExited

    private void eraseButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eraseButtonMouseExited
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_eraseButtonMouseExited

    private void linkButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkButtonMouseExited
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_linkButtonMouseExited

    private void labelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelButtonMouseExited
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_labelButtonMouseExited

    private void timeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timeButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_timeButtonMouseEntered

    private void timeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timeButtonMouseExited
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_timeButtonMouseExited

    private void regionButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regionButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_regionButtonMouseEntered

    private void regionButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regionButtonMouseExited
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_regionButtonMouseExited

    private void timeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timeButtonMouseClicked
        setFrame();
        panel.setState(BeePanel.TIME_STATE);
        panel.timeZoneInit();
    }//GEN-LAST:event_timeButtonMouseClicked

    private void regionButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regionButtonMouseClicked
        setFrame();
        panel.setState(BeePanel.REGION_STATE);
    }//GEN-LAST:event_regionButtonMouseClicked

    /**
     * 
     */
    public void setFrame() {
        panel.setFrame(this);
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BeeTree().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton eraseButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JToolBar fileToolbar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton labelButton;
    private javax.swing.JButton linkButton;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton nodeButton;
    private beetree.BeePanel panel;
    private javax.swing.JButton regionButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton timeButton;
    private javax.swing.JToolBar treeToolbar;
    // End of variables declaration//GEN-END:variables

}
